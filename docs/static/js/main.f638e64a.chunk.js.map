{"version":3,"sources":["data/data.js","components/NoteText.js","components/NoteURL.js","components/NoteShell.js","components/Project.js","components/NewTextNote.js","components/NewLinkNote.js","components/NewNote.js","components/NoteList.js","components/NewProject.js","components/ProjectFilter.js","components/ProjectFilterList.js","views/App.js","reportWebVitals.js","index.js"],"names":["NOTE_TYPE","type","title","text","url","NoteText","props","className","NoteLink","href","NoteShell","NoteURL","Project","name","data-bs-toggle","data-bs-target","replace","aria-expanded","aria-controls","id","notes","map","note","index","NewTextNote","Object","keys","projects","project","onChange","e","setNewTextNote","newTextNote","target","value","rows","onClick","addNewNote","document","getElementById","newTextAlert","role","NewLinkNote","setNewLinkNote","newLinkNote","newLinkAlert","NewNote","aria-hidden","autoComplete","htmlFor","data-bs-parent","NoteList","visibleProjects","includes","length","NewProject","placeholder","newProject","setNewProject","addNewProject","icon","faPlus","projectAlert","ProjectFilter","updateProjectFilter","ProjectFilterList","console","log","App","useState","data","setProjects","setVisible","setProjectAlert","setNewTextAlert","setNewLinkAlert","newProjects","filter","item","push","hasOwnProperty","window","setTimeout","_","cloneDeep","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f638e64a.chunk.js","sourcesContent":["export const NOTE_TYPE = {\r\n    TEXT: \"text\",\r\n    LINK: \"link\"\r\n}\r\n\r\nexport const NO_PROJECT = \"no project\"\r\n\r\nexport default {\r\n    \"Learn React\" : [\r\n        {\r\n            type: NOTE_TYPE.TEXT,\r\n            title: \"Create a new project\",\r\n            text: \"cd to the project directory\\nnpx create-react-app project-name\\ncd project-name\\nnpm start\"\r\n        },\r\n        {\r\n            type: NOTE_TYPE.LINK,\r\n            url: \"https://reactjs.org/docs/getting-started.html\",\r\n            text: \"React docs\"\r\n        },\r\n        {\r\n            type: NOTE_TYPE.LINK,\r\n            url: \"https://reactstrap.github.io/\",\r\n            text: \"Reactstrap docs\"\r\n        }\r\n    ],\r\n    [NO_PROJECT]: [\r\n        {\r\n            type: NOTE_TYPE.TEXT,\r\n            title: \"Lorem ipsum\",\r\n            text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Amet massa vitae tortor condimentum. Pretium aenean pharetra magna ac placerat vestibulum lectus mauris ultrices. Justo nec ultrices dui sapien eget mi proin sed libero. Ultricies leo integer malesuada nunc vel risus commodo viverra maecenas. Nisi quis eleifend quam adipiscing. Sit amet tellus cras adipiscing enim eu. Tincidunt tortor aliquam nulla facilisi cras fermentum. Orci phasellus egestas tellus rutrum. Tortor dignissim convallis aenean et. Imperdiet proin fermentum leo vel orci porta non pulvinar neque. Purus semper eget duis at tellus. Ut consequat semper viverra nam libero justo laoreet sit amet. Sed enim ut sem viverra aliquet eget. Amet volutpat consequat mauris nunc congue nisi. Aliquet nibh praesent tristique magna.\"\r\n        },\r\n        {\r\n            type: NOTE_TYPE.LINK,\r\n            url: \"https://loremipsum.io/generator/\",\r\n            text: \"Lorem Ipsum generator\"\r\n        },\r\n        {\r\n            type: NOTE_TYPE.LINK,\r\n            url: \"https://www.npr.org\",\r\n            text: \"\"\r\n        }\r\n    ]\r\n}","const NoteText = props =>\r\n    <div className=\"card-body\">            \r\n        <h3 className=\"card-title\">{props.title}</h3>\r\n        <p className=\"card-text\">{props.text}</p>\r\n    </div>\r\n\r\nexport default NoteText;","const NoteLink = props =>\r\n    <div className=\"card-body\">            \r\n        <a className=\"card-title\" href={props.url}><h3>{props.text != \"\" ? props.text : props.url}</h3></a>\r\n    </div>\r\n\r\nexport default NoteLink;","import {NOTE_TYPE} from '../data/data.js'\r\nimport NoteText from './NoteText.js'\r\nimport NoteURL from './NoteURL.js'\r\n\r\nconst NoteShell = props =>\r\n    <div>\r\n        {\r\n            props.type === NOTE_TYPE.TEXT &&\r\n                <NoteText title={props.title} text={props.text} />\r\n        }\r\n        {\r\n            props.type === NOTE_TYPE.LINK &&\r\n                <NoteURL url={props.url} text={props.text} />\r\n        }\r\n    </div>\r\n\r\nexport default NoteShell;","\r\n\r\nimport NoteShell from './NoteShell.js';\r\n\r\nconst Project = props =>\r\n    <div className=\"project-card\">\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">            \r\n                <h2 className=\"card-title title-with-button\">\r\n                    <span>{props.name}</span> \r\n                    <button className=\"btn btn-primary\" type=\"button\" \r\n                        data-bs-toggle=\"collapse\" data-bs-target={`#project-${props.name.replace(\" \", \"_\")}-collapse`} aria-expanded=\"true\" aria-controls={`project-${props.name.replace(\" \", \"_\")}-collapse`}\r\n                    >\r\n                        Collapse\r\n                    </button>\r\n                </h2>\r\n            </div>\r\n            <div className=\"collapse show\" id={`project-${props.name.replace(\" \", \"_\")}-collapse`}>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        props.notes.map((note, index) => \r\n                            <li className=\"list-group-item\" key={index}>\r\n                                <NoteShell title={note.title} text={note.text} url={note.url} type={note.type}/>\r\n                            </li>                            \r\n                        )\r\n                    }\r\n                </ul>  \r\n            </div>          \r\n        </div>        \r\n    </div>\r\n\r\nexport default Project;","import data from \"../data/data\";\r\nimport { NOTE_TYPE } from '../data/data.js';\r\nimport { NO_PROJECT } from '../data/data.js';\r\n\r\nconst NewTextNote = props =>\r\n    <div className=\"card card-body\">            \r\n        {/* <h3 className=\"card-title\">New Note</h3> */}\r\n        <label className=\"form-label\">Project: \r\n            <select className=\"form-control\" id=\"new-text-project\">\r\n                {\r\n                    Object.keys(props.projects).map((project, index) =>\r\n                        <option key={index}>{project}</option>                \r\n                    )\r\n                }\r\n            </select>\r\n        </label>\r\n        <label className=\"form-label\">Title:\r\n            <input type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={e => props.setNewTextNote({...props.newTextNote, title : e.target.value})}\r\n                value={props.newTextNote.title}\r\n                id=\"new-text-title\"\r\n            />\r\n        </label>\r\n        <label className=\"form-label\">Text:\r\n            <textarea type=\"textarea\" \r\n                className=\"form-control text-area-whitespace\"\r\n                onChange={e => props.setNewTextNote({...props.newTextNote, text : e.target.value})} \r\n                value={props.newTextNote.text}\r\n                rows=\"5\"\r\n            />\r\n        </label>\r\n        <button className=\"btn btn-primary col-12\" \r\n            onClick={() => {\r\n                props.addNewNote(document.getElementById(\"new-text-project\").value, props.newTextNote);\r\n                props.setNewTextNote({\r\n                    type: NOTE_TYPE.TEXT,\r\n                    title: \"\",\r\n                    text: \"\"\r\n                })\r\n            }}\r\n        >\r\n            Create Text Note\r\n        </button>\r\n        {\r\n            props.newTextAlert ?\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Text notes must have a title OR text.\r\n                </div>\r\n            : \"\"\r\n        }        \r\n    </div>\r\n\r\nexport default NewTextNote;","import { NOTE_TYPE } from '../data/data.js';\r\nimport { NO_PROJECT } from '../data/data.js';\r\n\r\nconst NewLinkNote = props =>\r\n    <div className=\"card card-body\">            \r\n        {/* <h3 className=\"card-title\">New Note</h3> */}\r\n        <label className=\"form-label\">Project:\r\n            <select className=\"form-control\" id=\"new-link-project\">\r\n                {\r\n                    Object.keys(props.projects).map((project, index) =>\r\n                        <option key={index}>{project}</option>                \r\n                    )\r\n                } \r\n            </select>\r\n        </label>        \r\n        <label className=\"form-label\">URL (requires protocol prefix):\r\n            <input type=\"url\" \r\n                className=\"form-control url-input\"\r\n                onChange={e => props.setNewLinkNote({...props.newLinkNote, url : e.target.value})}\r\n                value={props.newLinkNote.url}\r\n            />\r\n        </label>\r\n        \r\n        <label className=\"form-label\">Text:\r\n            <input type=\"text\"\r\n                className=\"form-control\" \r\n                onChange={e => props.setNewLinkNote({...props.newLinkNote, text : e.target.value})}\r\n                value={props.newLinkNote.text}\r\n            />\r\n        </label>        \r\n        <button className=\"btn btn-primary col-12\"\r\n            onClick={() => {\r\n                props.addNewNote(document.getElementById(\"new-link-project\").value, props.newLinkNote);\r\n                props.setNewLinkNote({\r\n                    type: NOTE_TYPE.LINK,\r\n                    url: \"\",\r\n                    text: \"\"\r\n                })\r\n            }}\r\n        >\r\n            Create Link Note\r\n        </button>\r\n        {\r\n            props.newLinkAlert ?\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    Link notes must have a url.\r\n                </div>\r\n            : \"\"\r\n        }  \r\n    </div>\r\n\r\nexport default NewLinkNote;","import NewTextNote from './NewTextNote.js';\r\nimport NewLinkNote from './NewLinkNote.js';\r\n\r\nconst NewNote = props =>\r\n    <div className=\"new-note\">       \r\n        <button type=\"button\" className=\"btn btn-primary col-12 mb-2\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#new-note-collapse-parent\" aria-expanded=\"false\" aria-controls=\"new-note-collapse-parent\">\r\n            <h2 className=\"visually-hidden\">New Note</h2> \r\n            <span aria-hidden=\"true\">New Note</span> \r\n        </button>\r\n        <div className=\"collapse\" id=\"new-note-collapse-parent\">\r\n            <div className=\"btn-group col-12 mb-2\" id=\"new-note-types\">\r\n                <input type=\"radio\" className=\"btn-check\" name=\"newNoteRadio\" id=\"radioTextNote\" autoComplete=\"off\" \r\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#new-text-note\" aria-expanded=\"false\" aria-controls=\"new-text-note\"\r\n                />\r\n                <label className=\"btn btn-outline-primary\" htmlFor=\"radioTextNote\">Text Note</label>\r\n\r\n                <input type=\"radio\" className=\"btn-check\" name=\"newNoteRadio\" id=\"radioLinkNote\" autoComplete=\"off\" \r\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#new-link-note\" aria-expanded=\"false\" aria-controls=\"new-link-note\"\r\n                />\r\n                <label className=\"btn btn-outline-primary\" htmlFor=\"radioLinkNote\">Link Note</label>\r\n            </div>\r\n            <div className=\"collapse\" id=\"new-text-note\"  data-bs-parent=\"#new-note-collapse-parent\" >\r\n                <NewTextNote projects={props.projects} newTextNote={props.newTextNote} setNewTextNote={props.setNewTextNote} addNewNote={props.addNewNote} newTextAlert={props.newTextAlert}/>\r\n            </div>\r\n            <div className=\"collapse\" id=\"new-link-note\"  data-bs-parent=\"#new-note-collapse-parent\" >\r\n                <NewLinkNote projects={props.projects} newLinkNote={props.newLinkNote} setNewLinkNote={props.setNewLinkNote} addNewNote={props.addNewNote} newLinkAlert={props.newLinkAlert}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default NewNote;","import NewNote from './NewNote.js'\r\nimport Project from './Project.js';\r\n\r\nconst NoteList = props =>\r\n    <div>\r\n                   \r\n        {\r\n            Object.keys(props.projects).map((project, index) => \r\n                (props.visibleProjects.includes(project) || props.visibleProjects.length === 0) ?\r\n                    <Project key={index} name={project} notes={props.projects[project]}/>   \r\n                    : \"\"             \r\n            )\r\n        }\r\n    </div>\r\n\r\nexport default NoteList;","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NewProject = props =>\r\n    <div className=\"list-group-item\">\r\n        <label className=\"form-label\" htmlFor=\"new-project-input\">New Project</label>\r\n        <div className=\"input-group\">\r\n            <input type=\"text\" className=\"form-control\" id=\"new-project-input\"\r\n                placeholder=\"Project title...\"\r\n                value={props.newProject}\r\n                onChange={e => props.setNewProject(e.target.value)}\r\n            />\r\n            <button className={`btn btn-primary ${props.newProject === \"\" ? \"disabled\" : \"\"}`} type=\"button\" \r\n                onClick={props.addNewProject}\r\n            >\r\n                <span className=\"visually-hidden\">Add New Project</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n            {\r\n                props.projectAlert ?\r\n                    <div className=\"alert alert-warning\" role=\"alert\">\r\n                        A project with that name already exists.\r\n                    </div>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    </div>\r\n\r\nexport default NewProject\r\n","const ProjectFilter = props =>\r\n    <label className=\"list-group-item list-group-item-action project-filter-label\">\r\n        <span>{props.project}</span>                        \r\n        <input className=\"form-check-input\" type=\"checkbox\" value=\"project-filter\" onChange={() => props.updateProjectFilter(props.project)}></input>                                              \r\n    </label>  \r\n\r\nexport default ProjectFilter;","import NewProject from \"./NewProject\";\r\nimport ProjectFilter from \"./ProjectFilter\";\r\n\r\n\r\nconst ProjectFilterList = props =>\r\n    <div className=\"\">\r\n        {console.log(\"Visible projects:\", props.visibleProjects)}\r\n        <div className=\"list-group\">\r\n            <div className=\"list-group-item list-group-item-dark\">\r\n                <h3 className=\"title-with-button\">\r\n                    <span>Filter projects:</span>\r\n                    <button className=\"btn btn-primary collapse-project-filters\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#project-filters\" aria-expanded=\"true\" aria-controls=\"project-filters\">\r\n                        Expand\r\n                    </button>\r\n                </h3>\r\n                \r\n            </div>\r\n            <div className=\"collapse show filters-list\" id=\"project-filters\">\r\n                {\r\n                    Object.keys(props.projects).map((project, index) =>\r\n                        <ProjectFilter key={index} project={project} updateProjectFilter={props.updateProjectFilter}/>             \r\n                    )\r\n                }\r\n                <NewProject newProject={props.newProject} addNewProject={props.addNewProject} setNewProject={props.setNewProject} projectAlert={props.projectAlert}/>              \r\n            </div>            \r\n        </div>\r\n    </div>\r\n\r\nexport default ProjectFilterList;","import { useState } from \"react\";\r\nimport _ from 'lodash';\r\nimport data from '../data/data.js';\r\nimport { NOTE_TYPE } from '../data/data.js'\r\nimport Project from '../components/Project.js';\r\nimport NewNote from '../components/NewNote.js'\r\nimport NoteList from '../components/NoteList.js';\r\nimport ProjectFilterList from '../components/ProjectFilterList.js';\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [projects, setProjects] = useState(data);\r\n    const [visibleProjects, setVisible] = useState([]);\r\n    const [newProject, setNewProject] = useState(\"\");\r\n    const [projectAlert, setProjectAlert] = useState(false);\r\n    const [newTextNote, setNewTextNote] = useState({\r\n        type: NOTE_TYPE.TEXT,\r\n        title: \"\",\r\n        text: \"\"\r\n    });\r\n    const [newTextAlert, setNewTextAlert] = useState(false);\r\n    const [newLinkNote, setNewLinkNote] = useState({\r\n        type: NOTE_TYPE.LINK,\r\n        url: \"\",\r\n        text: \"\"\r\n    });\r\n    const [newLinkAlert, setNewLinkAlert] = useState(false);\r\n\r\n    const updateProjectFilter = project => {\r\n        console.log(\"Filtering project:\", project);\r\n        let newProjects;\r\n        if (!visibleProjects.includes(project)) {\r\n            newProjects = visibleProjects.map((project, index) => {\r\n                return project;\r\n            })\r\n            newProjects.push(project);\r\n        } else {\r\n            newProjects = visibleProjects.filter( item => item !== project);\r\n        }\r\n        console.log(\"New projects:\", newProjects);\r\n        setVisible(newProjects);\r\n    }\r\n\r\n    const addNewProject = () => {\r\n        console.log(\"New project title: \" + newProject);\r\n        if (!projects.hasOwnProperty(newProject)) {\r\n            let newProjects = _.cloneDeep(projects);\r\n            newProjects[newProject] = [];\r\n            setProjects(newProjects);\r\n            setNewProject(\"\");\r\n        } else {\r\n            setProjectAlert(true);\r\n            window.setTimeout(() => {\r\n                setProjectAlert(false);\r\n            }, 10000);\r\n        }\r\n        \r\n    }\r\n\r\n    const addNewNote = (project, note) => {\r\n        if (note.type === NOTE_TYPE.TEXT) {\r\n            if (note.title !== \"\" || note.text !==\"\") {\r\n                console.log(\"Add new note\", note, \" to project \", project);\r\n                let newProjects = _.cloneDeep(projects);\r\n                newProjects[project].push(note);\r\n                console.log(newProjects);\r\n                setProjects(newProjects);\r\n                setNewTextAlert(false);\r\n            } else {\r\n                setNewTextAlert(true);\r\n                window.setTimeout(() => {\r\n                    setNewTextAlert(false);\r\n                }, 10000);\r\n            }\r\n        } else if (note.type === NOTE_TYPE.LINK) {\r\n            if (note.url !== \"\") {\r\n                console.log(\"Add new note\", note, \" to project \", project);\r\n                let newProjects = _.cloneDeep(projects);\r\n                newProjects[project].push(note);\r\n                console.log(newProjects);\r\n                setProjects(newProjects);\r\n                setNewLinkAlert(false);\r\n            } else {\r\n                setNewLinkAlert(true);\r\n                window.setTimeout(() => {\r\n                    setNewLinkAlert(false);\r\n                }, 10000);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"project-filter\">\r\n                    <ProjectFilterList \r\n                        projects={projects}\r\n                        visibleProjects={visibleProjects}\r\n                        updateProjectFilter={updateProjectFilter}\r\n                        newProject={newProject}\r\n                        setNewProject={setNewProject}\r\n                        addNewProject={addNewProject}\r\n                        projectAlert={projectAlert}\r\n                    />\r\n                </div>            \r\n                <div className=\"note-list\">\r\n                    <NewNote projects={projects}\r\n                        newTextNote={newTextNote}\r\n                        setNewTextNote={setNewTextNote}\r\n                        newLinkNote={newLinkNote}\r\n                        setNewLinkNote={setNewLinkNote}\r\n                        addNewNote={addNewNote}\r\n                        newTextAlert={newTextAlert}\r\n                        newLinkAlert={newLinkAlert}\r\n                    /> \r\n                    <NoteList projects={projects} visibleProjects={visibleProjects}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// $ and Popper are used by bootstrap, do not remove these imports\r\n// even though they appear unnecessary\r\n// import $ from 'jquery';\r\n//import Popper from 'popper.js';\r\n//import 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport bootstrap from 'bootstrap';\r\nimport _ from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/styles.css';\r\nimport App from './views/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}